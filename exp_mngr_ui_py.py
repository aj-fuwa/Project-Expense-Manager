# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'exp_mngr_ui_layout.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1738, 917)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.mnt_exp_tab = QtWidgets.QPushButton(self.centralwidget)
        self.mnt_exp_tab.setGeometry(QtCore.QRect(620, 100, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mnt_exp_tab.setFont(font)
        self.mnt_exp_tab.setObjectName("mnt_exp_tab")
        self.main_title_label = QtWidgets.QLabel(self.centralwidget)
        self.main_title_label.setGeometry(QtCore.QRect(30, 0, 471, 81))
        font = QtGui.QFont()
        font.setPointSize(31)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.main_title_label.setFont(font)
        self.main_title_label.setObjectName("main_title_label")
        self.total_display_label = QtWidgets.QLabel(self.centralwidget)
        self.total_display_label.setGeometry(QtCore.QRect(30, 100, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.total_display_label.setFont(font)
        self.total_display_label.setObjectName("total_display_label")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(290, 110, 111, 51))
        self.textBrowser.setObjectName("textBrowser")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(1050, 50, 631, 391))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setLineWidth(3)
        self.frame_2.setObjectName("frame_2")
        self.calendarWidget = QtWidgets.QCalendarWidget(self.centralwidget)
        self.calendarWidget.setGeometry(QtCore.QRect(30, 350, 392, 221))
        self.calendarWidget.setObjectName("calendarWidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(1050, 470, 631, 361))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setLineWidth(3)
        self.frame.setObjectName("frame")
        self.mnt_exp_xls = QtWidgets.QPushButton(self.centralwidget)
        self.mnt_exp_xls.setGeometry(QtCore.QRect(620, 240, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.mnt_exp_xls.setFont(font)
        self.mnt_exp_xls.setObjectName("mnt_exp_xls")
        self.overall_exp_button = QtWidgets.QPushButton(self.centralwidget)
        self.overall_exp_button.setGeometry(QtCore.QRect(620, 380, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.overall_exp_button.setFont(font)
        self.overall_exp_button.setObjectName("overall_exp_button")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(490, 470, 161, 41))
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 170, 101, 51))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 240, 451, 71))
        font = QtGui.QFont()
        font.setFamily("Terminal")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(1060, 480, 611, 341))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.mnth_exp_view_graphics = QtWidgets.QGraphicsView(self.centralwidget)
        self.mnth_exp_view_graphics.setGeometry(QtCore.QRect(1060, 60, 611, 371))
        self.mnth_exp_view_graphics.setObjectName("mnth_exp_view_graphics")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1738, 26))
        self.menubar.setObjectName("menubar")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuDetailed_Info = QtWidgets.QMenu(self.menubar)
        self.menuDetailed_Info.setObjectName("menuDetailed_Info")
        self.menuShow_Insights = QtWidgets.QMenu(self.menuDetailed_Info)
        self.menuShow_Insights.setObjectName("menuShow_Insights")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionAbout_App = QtWidgets.QAction(MainWindow)
        self.actionAbout_App.setObjectName("actionAbout_App")
        self.actionGitHub_Link = QtWidgets.QAction(MainWindow)
        self.actionGitHub_Link.setObjectName("actionGitHub_Link")
        self.actionOverall_Insights = QtWidgets.QAction(MainWindow)
        self.actionOverall_Insights.setObjectName("actionOverall_Insights")
        self.actionGrocery_Insights = QtWidgets.QAction(MainWindow)
        self.actionGrocery_Insights.setObjectName("actionGrocery_Insights")
        self.actionFood_Insights = QtWidgets.QAction(MainWindow)
        self.actionFood_Insights.setObjectName("actionFood_Insights")
        self.actionShow_Predictions = QtWidgets.QAction(MainWindow)
        self.actionShow_Predictions.setObjectName("actionShow_Predictions")
        self.menuAbout.addAction(self.actionAbout_App)
        self.menuAbout.addAction(self.actionGitHub_Link)
        self.menuShow_Insights.addAction(self.actionOverall_Insights)
        self.menuShow_Insights.addAction(self.actionGrocery_Insights)
        self.menuShow_Insights.addAction(self.actionFood_Insights)
        self.menuDetailed_Info.addAction(self.menuShow_Insights.menuAction())
        self.menuDetailed_Info.addAction(self.actionShow_Predictions)
        self.menubar.addAction(self.menuAbout.menuAction())
        self.menubar.addAction(self.menuDetailed_Info.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # mapping functions to the menu options
        self.actionAbout_App.triggered.connect(lambda:self.func_mo_about_app())
        self.actionGitHub_Link.triggered.connect(lambda:self.func_mo_github_link())
        self.actionShow_Predictions.triggered.connect(lambda:self.func_mo_show_pred())
        self.actionFood_Insights.triggered.connect(lambda:self.func_mo_food_ins())
        self.actionGrocery_Insights.triggered.connect(lambda:self.func_mo_groc_ins())
        self.actionOverall_Insights.triggered.connect(lambda:self.func_mo_overall_ins())

        # mapping functions to the buttons
        self.pushButton.clicked.connect(self.input_page)    # for expenses input button

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mnt_exp_tab.setText(_translate("MainWindow", "Show Monthly Expenses (Tabular Format)"))
        self.main_title_label.setText(_translate("MainWindow", "Expense Manager"))
        self.total_display_label.setText(_translate("MainWindow", "Total (Month) in â‚¬:"))
        self.mnt_exp_xls.setText(_translate("MainWindow", "Show Monthly Expenses (in Excel)"))
        self.overall_exp_button.setText(_translate("MainWindow", "Show overall expenditure "))
        self.label_2.setText(_translate("MainWindow", "Rating: "))
        self.pushButton.setText(_translate("MainWindow", "Click to enter the expenses for today"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))
        self.menuDetailed_Info.setTitle(_translate("MainWindow", "Detailed Info"))
        self.menuShow_Insights.setTitle(_translate("MainWindow", "Show Insights"))
        self.actionAbout_App.setText(_translate("MainWindow", "About App"))
        self.actionGitHub_Link.setText(_translate("MainWindow", "GitHub Link"))
        self.actionOverall_Insights.setText(_translate("MainWindow", "Overall Insights"))
        self.actionGrocery_Insights.setText(_translate("MainWindow", "Grocery Insights"))
        self.actionFood_Insights.setText(_translate("MainWindow", "Food Insights"))
        self.actionShow_Predictions.setText(_translate("MainWindow", "Show Predictions"))

    def input_page(self):
        pass

    def func_mo_about_app(self):
        msg = QMessageBox()
        msg.setWindowTitle("Information about the app")
        msg.setText("'Expense Manager' is an app designed using PyQt5, where the user can enter the monthly expenditure"
                    " and get detailed analysis and breakdowns of the expenditure on a monthly basis. Using an interactive GUI"
                    ", the user can input the expenses, which get stored in a PostGreSQL database running in the background."
                    "This app can also help predict the expenses based on the purchases and also help keep a track of the calories the user is consuming."
                    "Apart from these features, the app also provides a rating for the month, where 1 is Poor, 2 is Satisfactory, 3 is Good, and 4 is Excellent."
                    "(When expense is under â‚¬650 = 4, Expense under â‚¬700 = 3, Expense under â‚¬750 = 2, Expense above â‚¬750 = 1)")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()

    def func_mo_github_link(self):
        msg = QMessageBox()
        msg.setWindowTitle("Link to the GitHub Repo")
        msg.setText("Link to be updated soon!!")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()


    def func_mo_overall_ins(self):
        msg = QMessageBox()
        msg.setWindowTitle("Overall Insights")
        msg.setText("Under construction")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()

    def func_mo_food_ins(self):
        msg = QMessageBox()
        msg.setWindowTitle("Food Insights")
        msg.setText("Under construction")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()

    def func_mo_groc_ins(self):
        msg = QMessageBox()
        msg.setWindowTitle("Grocery Insights")
        msg.setText("Under construction")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()

    def func_mo_show_pred(self):
        msg = QMessageBox()
        msg.setWindowTitle("Predictions")
        msg.setText("Under construction")
        msg.setIcon(QMessageBox.Information)
        x = msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
